<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_cursorparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The Open Editor level editor!

//Inherit default create event
event_inherited()

//Sync camera position when returning to editor
view_xview[0] = global.editor_camx
view_yview[0] = global.editor_camy

//Reset saved camera coordinates
global.editor_camx = 0
global.editor_camy = 0

//Is grid enabled?
grid = true

//Cooldown until resize spam (when holding shift)
resizing = -1

//Are editor controls disabled
disablecontrols = false

//Are placing objects disabled
disableplace = false

//Previous mouse position (for panning)
panx = x
pany = y

//Previous camera position (for panning)
pre_view_xview = view_xview[0]
pre_view_yview = view_yview[0]

//Tileset position (for the tile select menu)
tilexpos = 0
tileypos = 0

/*
**  Type of object selected
**
**  0: Nothing
**  1: Tile
**  2: BG Tile
**  3: Object
**  4: Marker
**  5: Modifier
*/
selection = 0

//Selection config:

//Use to determine the starting tile in the selection
select_x = 0
select_y = 0

//Used for selecting multiple tiles
select_w = 0
select_h = 0

//Name of the object selected
myname = ""

//Modifier contents of selected object
content = noone
mytype = 0

//Sprite info for the selected object
select_sprite = array_create(0)
select_sprite_x = array_create(0)
select_sprite_y = array_create(0)
select_sprite_alpha = array_create(0)
select_sprite_animation = array_create(0)
select_sprite_subimg = array_create(0)
select_sprite_xscale = array_create(0)
select_sprite_yscale = array_create(0)

//Text info for the selected object
select_text_center = ""
select_text_left = ""
select_text_right = ""

//Animations for things placed in the editor
anim[0] = 0
anim[1] = 0
anim[2] = 0
anim[3] = 0
anim[4] = 0

//Stop music from previous room
if global.levelmusic != noone
    audio_stop_sound(global.levelmusic)

//Level music
global.levelmusic = noone

//Create BG Animator object
instance_create(0,0,obj_bganimator)

//Create the HUD object
instance_create(10,4,obj_editor_hud)

//Load level data into editor
scr_gen_level_editor(global.currentsection)

//Set alarm to play music
alarm[0] = 2

//Animate objects in the editor
alarm[2] = 7
alarm[3] = 18
alarm[4] = 1
alarm[5] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object animation 4
anim[4]++
alarm[5] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object animation 3
anim[3]++
alarm[4] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object animation 2
anim[2]++
alarm[3] = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object animation 1
anim[1]++
alarm[2] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loop the music
if not audio_is_playing(global.levelmusic)
and global.levelmusic != noone
{
    audio_play_sound(global.levelmusic,99,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Editor logic

//Inherit default cursor logic
event_inherited()

//Disable placing objects if the cursor is hovering over the HUD
if collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_editor_hud,0,1)

//Disable placing objects outside the level
or not (x &gt; 0
and y &gt; 0
and x &lt; room_width
and y &lt; room_height)
    disableplace = true
else
    disableplace = false
    
//Disable controls there's a window open
if instance_exists(obj_ewindow)
    disablecontrols = true
else
    disablecontrols = false

//If controls are enabled:
if not disablecontrols
{

    //Shift to resize level
    if keyboard_check(vk_shift)
    {
        
        //Shift left-click to use fill tool
        if mouse_check_button_pressed(mb_left)
        and ((selection == 1
        and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) == -1)
        or (selection == 2
        and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) == -1))
        and (floor(x/16))*16 &gt;= 0
        and (floor(y/16))*16 &gt;= 0
        and (floor(x/16))*16 &lt; room_width
        and (floor(y/16))*16 &lt; room_height
        {
            scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,false,select_x,select_y,false)
            audio_play_sound(snd_magic,0,0)
            audio_play_sound(snd_kick,0,0)
        }
        
        //Shift right-click to use fill delete tool
        else if mouse_check_button_pressed(mb_right)
        and (floor(x/16))*16 &gt;= 0
        and (floor(y/16))*16 &gt;= 0
        and (floor(x/16))*16 &lt; room_width
        and (floor(y/16))*16 &lt; room_height
        {
            if selection == 1
            and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) != -1
            {
                scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,true,tile_get_left(tile_layer_find(9,floor(x/16)*16,floor(y/16)*16)),tile_get_top(tile_layer_find(9,floor(x/16)*16,floor(y/16)*16)),false)
                audio_play_sound(snd_magic,0,0)
                audio_play_sound(snd_kick2,0,0)
            }
            else if selection == 2
            and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) != -1
            {
                scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,true,tile_get_left(tile_layer_find(12,floor(x/16)*16,floor(y/16)*16)),tile_get_top(tile_layer_find(12,floor(x/16)*16,floor(y/16)*16)),false)
                audio_play_sound(snd_magic,0,0)
                audio_play_sound(snd_kick2,0,0)
            }
        }
    
        //Check for arrow key pressing to resize room
        if (keyboard_check_pressed(vk_left)
        or keyboard_check_pressed(vk_right)
        or keyboard_check_pressed(vk_up)
        or keyboard_check_pressed(vk_down))
        {
            //Resize the room
            event_user(3)
            
            //Start resize spam if held for 30 frames (half a second)
            resizing = 30
        }
        
        //Stop resize spam once the arrow keys are released
        if keyboard_check_released(vk_left)
        or keyboard_check_released(vk_right)
        or keyboard_check_released(vk_up)
        or keyboard_check_released(vk_down)
        and resizing != -1
            resizing = -1
        
        //Decrement the resize timer if it hasn't already expired
        if resizing != -1
            resizing--
        
        //Resize the level if the timer ran out
        if resizing = 0
            event_user(3)
    
    }
    //If the level isn't being resized:
    else
    {
        
        //Stop resizing the section
        resizing = -1
        
        //Hold C and click for checkerboard fill tool
        if keyboard_check(ord('C'))
        {
            
            //Left click for checker fill place
            if mouse_check_button_pressed(mb_left)
            and ((selection == 1
            and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) == -1)
            or (selection == 2
            and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) == -1))
            and (floor(x/16))*16 &gt;= 0
            and (floor(y/16))*16 &gt;= 0
            and (floor(x/16))*16 &lt; room_width
            and (floor(y/16))*16 &lt; room_height
            {
                scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,false,select_x,select_y,true)
                audio_play_sound(snd_magic,0,0)
                audio_play_sound(snd_kick,0,0)
            }
            
            //Right-click for checker fill delete
            else if mouse_check_button_pressed(mb_right)
            and (floor(x/16))*16 &gt;= 0
            and (floor(y/16))*16 &gt;= 0
            and (floor(x/16))*16 &lt; room_width
            and (floor(y/16))*16 &lt; room_height
            {
                if selection == 1
                and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) != -1
                {
                    scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,true,tile_get_left(tile_layer_find(9,floor(x/16)*16,floor(y/16)*16)),tile_get_top(tile_layer_find(9,floor(x/16)*16,floor(y/16)*16)),true)
                    audio_play_sound(snd_magic,0,0)
                    audio_play_sound(snd_kick2,0,0)
                }
                else if selection == 2
                and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) != -1
                {
                    scr_editor_fill_tool(floor(x/16)*16,floor(y/16)*16,true,tile_get_left(tile_layer_find(12,floor(x/16)*16,floor(y/16)*16)),tile_get_top(tile_layer_find(12,floor(x/16)*16,floor(y/16)*16)),true)
                    audio_play_sound(snd_magic,0,0)
                    audio_play_sound(snd_kick2,0,0)
                }
            }
        }
        //Stop resizing the level
        alarm[1] = 0
        
        //Only allow placing and deleting if the cursor is within the level
        if not disableplace
        {
            //Left click to place
            if selection &gt; 0
            and mouse_check_button(mb_left)
            {
                event_user(1)
            }
            //Right click to delete
            else if mouse_check_button(mb_right)
            {
                event_user(2)
            }
        }
        //Middle click camera panning
        if mouse_check_button(mb_middle)
        {
        
            //Get the change in the mouse position and use that to pan
            view_xview[0] += panx - x
            view_yview[0] += pany - y
            
        }
        //Arrow key camera panning
        else
        {
            //Default camera scroll speed
            var view_speed = 5;
            
            //Boost camera scroll speed if CTRL is being pressed
            view_speed += 10 * keyboard_check(vk_control)
            
            //Move the camera up
            if keyboard_check(vk_up)
            or (y &lt; view_yview[0] + 8
            and not outside_view())
                view_yview[0] -= view_speed
            
            //Move the camera down
            if keyboard_check(vk_down)
            or (y &gt; view_yview[0] + view_hview[0] - 8
            and not outside_view())
                view_yview[0] += view_speed
            
            //Move the camera left
            if keyboard_check(vk_left)
            or (x &lt; view_xview[0] + 8
            and not outside_view())
                view_xview[0] -= view_speed
            
            //Move the camera right
            if keyboard_check(vk_right)
            or (x &gt; view_xview[0] + view_wview[0] - 8
            and not outside_view())
                view_xview[0] += view_speed
            
        }
        
    }
    
    //Check if space is pressed
    if keyboard_check_pressed(vk_space)
    {
    
        //Toggle the grid
        grid = !grid
        
        //Play the sound effect
        audio_play_sound(snd_chest,0,0)
        
    }

}

//Don't let the camera go too far outside the room
if view_xview[0] &lt; -160
    view_xview[0] = -160
if view_yview[0] &lt; -120
    view_yview[0] = -120
if view_xview[0] + view_wview[0] &gt; room_width + 160
    view_xview[0] = room_width + 160 - view_wview[0]
if view_yview[0] + view_hview[0] &gt; room_height + 120
    view_yview[0] = room_height + 120 - view_hview[0]

//Move cursor to account for changed view
x += view_xview[0] - pre_view_xview
y += view_yview[0] - pre_view_yview

//Keep track of the previous mouse position for panning
panx = x
pany = y

//Keep track of the previous camera position for panning
pre_view_xview = view_xview[0]
pre_view_yview = view_yview[0]

//Horizontal parallax scrolling for layer 0 backgrounds
background_x[0] = view_xview[0]/2

//Vertical parallax scrolling for layer 0 backgrounds if needed
if background_height[0] &lt; room_height
and background_height[0] &gt; view_hview[0]
    background_y[0] = view_yview[0]*(room_height-background_height[0])/(room_height-view_hview[0])
else
    background_y[0] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resize the level

//Shrink level to the left
if keyboard_check(vk_left)
and room_width &gt; 384
and scr_editor_can_resize_left()
    room_width -= 16
    
//Grow level to the right
if keyboard_check(vk_right)
    room_width += 16

//Shrink level upwards
if keyboard_check(vk_up)
and room_height &gt; 224
and scr_editor_can_resize_up()
    room_height -= 16
    
//Grow level downwards
if keyboard_check(vk_down)
    room_height += 16

//If the size of the section changed..
if json_get(global.leveldata,global.currentsection,"WIDTH") * 16 != room_width
or json_get(global.leveldata,global.currentsection,"HEIGHT") * 16 != room_height
{

    //Play the SMB2 pickup sound
    audio_play_sound(snd_pickup,0,0)
    
    //Save the new size of the level
    json_set(global.leveldata,global.currentsection,"WIDTH", room_width / 16)
    json_set(global.leveldata,global.currentsection,"HEIGHT", room_height / 16)
    
}

//Resize again in 1 frame
resizing = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object delete script

//Handle tile deletion
if (selection = 1
or selection = 0)
and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) != -1
{
    //Play delete sound
    audio_play_sound(snd_kick2,0,0)

    //Remove tile from level data
    json_unset(global.leveldata,global.currentsection,"TILES",string(floor(x/16))+","+string(floor(y/16)))
    
    //Delete tile from the screen
    tile_layer_delete_at(9,floor(x/16)*16,floor(y/16)*16)
}

//Handle BG tile deletion
if (selection = 2
or selection = 0)
and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) != -1
{
    //Play delete sound
    audio_play_sound(snd_kick2,0,0)

    //Remove tile from level data
    json_unset(global.leveldata,global.currentsection,"TILES_BG",string(floor(x/16))+","+string(floor(y/16)))
    
    //Delete tile from the screen
    tile_layer_delete_at(12,floor(x/16)*16,floor(y/16)*16)
}

//Handle object deletion
if (selection = 3
or selection = 0)
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_object) != noone
{
    //Play delete sound
    audio_play_sound(snd_kick2,0,0)
    
    //Remove object from level data
    json_unset(global.leveldata,global.currentsection,"OBJECTS",string(floor(x/16))+","+string(floor(y/16)))
    
    //Delete object preview from the screen
    instance_destroy(instance_place(floor(x/16)*16,floor(y/16)*16,obj_editor_place_object))
}

//Handle marker deletion
if (selection = 4
or selection = 0)
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_marker) != noone
{
    //Play delete sound
    audio_play_sound(snd_kick2,0,0)
    
    //Remove object from level data
    json_unset(global.leveldata,global.currentsection,"MARKERS",string(floor(x/16))+","+string(floor(y/16)))
    
    //Delete object preview from the screen
    instance_destroy(instance_place(floor(x/16)*16,floor(y/16)*16,obj_editor_place_marker))
}

//Handle modifier deletion
if (selection = 5
or selection = 0)
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_modifier) != noone
{
    //Play delete sound
    audio_play_sound(snd_kick2,0,0)
    
    //Remove object from level data
    json_unset(global.leveldata,global.currentsection,"MODIFIERS",string(floor(x/16))+","+string(floor(y/16)))
    
    //Delete object preview from the screen
    instance_destroy(instance_place(floor(x/16)*16,floor(y/16)*16,obj_editor_place_modifier))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object place script

//Handle tile placement
if selection = 1
and tile_layer_find(9,floor(x/16)*16,floor(y/16)*16) = -1
{
    //Play place sound
    audio_play_sound(snd_kick,0,0)
    
    //Loop through selected tiles
    for(var i = 0, w = 0, h = 0; i &lt; select_w * select_h; i++)
    {
        //Only add tiles that aren't occupied..
        if tile_layer_find(9,(w+floor(x/16))*16,(h+floor(y/16))*16) = -1
        //..and are within room bounds
        and (w + floor(x/16))*16 &gt;= 0
        and (h + floor(y/16))*16 &gt;= 0
        and (w + floor(x/16))*16 &lt; room_width
        and (h + floor(y/16))*16 &lt; room_height
        {
            //Add it to the screen
            tile_add(bg_tileset,w*16+(select_x*16),h*16+(select_y*16),16,16,floor(w+x/16)*16,floor(h+y/16)*16,9)
            
            //Save it to the level data
            json_set(global.leveldata,global.currentsection,"TILES",string(w+floor(x/16))+","+string(h+floor(y/16)),string(select_x+w)+","+string(select_y+h))
        }
        //Get ready for next tile
        w++
        if w &gt;= select_w
        {
            w = 0
            h++
        }
    }
}

//Handle BG tile placement
if selection = 2
and tile_layer_find(12,floor(x/16)*16,floor(y/16)*16) = -1
{
    //Play place sound
    audio_play_sound(snd_kick,0,0)
    
    //Loop through selected tiles
    for(var i = 0, w = 0, h = 0; i &lt; select_w * select_h; i++)
    {
        //Only add tiles that aren't occupied..
        if tile_layer_find(12,(w+floor(x/16))*16,(h+floor(y/16))*16) = -1
        //..and are within room bounds
        and (w + floor(x/16))*16 &gt;= 0
        and (h + floor(y/16))*16 &gt;= 0
        and (w + floor(x/16))*16 &lt; room_width
        and (h + floor(y/16))*16 &lt; room_height
        {
            //Add it to the screen
            tile_add(bg_tileset,w*16+(select_x*16),h*16+(select_y*16),16,16,floor(w+x/16)*16,floor(h+y/16)*16,12)
            
            //Save it to the level data
            json_set(global.leveldata,global.currentsection,"TILES_BG",string(w+floor(x/16))+","+string(h+floor(y/16)),string(select_x+w)+","+string(select_y+h))
        }
        //Get ready for next tile
        w++
        if w &gt;= select_w
        {
            w = 0
            h++
        }
    }
}

//Handle object placement
if selection = 3
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_object) = noone
{
    //Play place sound
    audio_play_sound(snd_kick,0,0)
    
    //Add the object preview to the screen
    with instance_create(floor(x/16)*16,floor(y/16)*16,obj_editor_place_object)
    {
        myname = other.myname
        event_user(0)
    }
    
    //Save it to the level data
    json_set(global.leveldata,global.currentsection,"OBJECTS",string(floor(x/16))+","+string(floor(y/16)),myname)
}

//Handle marker placement
if selection = 4
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_marker) = noone
{
    //Play place sound
    audio_play_sound(snd_kick,0,0)
    
    //Add the object preview to the screen
    with instance_create(floor(x/16)*16,floor(y/16)*16,obj_editor_place_marker)
    {
        myname = other.myname
        event_user(0)
    }
    
    //Save it to the level data
    json_set(global.leveldata,global.currentsection,"MARKERS",string(floor(x/16))+","+string(floor(y/16)),myname)
}

//Handle modifier placement
if selection = 5
and instance_position(floor(x/16)*16,floor(y/16)*16,obj_editor_place_modifier) = noone
{
    //Play place sound
    audio_play_sound(snd_kick,0,0)
    
    //Add the object preview to the screen
    with instance_create(floor(x/16)*16,floor(y/16)*16,obj_editor_place_modifier)
    {
        myname = other.myname
        content = other.content
        event_user(0)
    }
    
    var _modname = myname;
    
    //Figure out if modifier content should be saved (for text modifiers)
    if mytype &gt; 0
    {
        _modname += ":" + content
    }
    
    //Save it to the level data
    json_set(global.leveldata,global.currentsection,"MODIFIERS",string(floor(x/16))+","+string(floor(y/16)),_modname)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear selection
selection = 0
select_x = 0
select_y = 0
select_w = 0
select_h = 0
myname = ""
mytype = 0
content = noone
select_sprite = array_create(0)
select_sprite_x = array_create(0)
select_sprite_y = array_create(0)
select_sprite_alpha = array_create(0)
select_sprite_animation = array_create(0)
select_sprite_subimg = array_create(0)
select_sprite_xscale = array_create(0)
select_sprite_yscale = array_create(0)
select_text_center = ""
select_text_left = ""
select_text_right = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw various editor things

//If the player can place things:
if not disableplace
and not disablecontrols
{

    //Round cursor position to the nearest tile
    var prev_x = x,
        prev_y = y;
    x = floor(x/16)*16
    y = floor(y/16)*16
    
    //Make selection highlight red if deleting
    if mouse_check_button(mb_right)
        draw_set_color(c_red)
        
    //Otherwise:
    else
    {
        
        //If a tile is selected...
        if selection = 1
        or selection = 2
        {
        
            //Draw the corresponding tile(s) as a preview
            draw_background_part(bg_tileset,select_x*16,select_y*16,select_w*16,select_h*16,x,y)
            
        }
        //If an object is selected...
        else if selection = 3
        {
            
            //Draw the object preview (it's totally a hack but whatever)
            event_perform_object(obj_editor_place_object,ev_draw,0)
            
        }
        //If a marker is selected...
        else if selection = 4
        {
            
            //Draw the marker preview (it's totally a hack but whatever)
            event_perform_object(obj_editor_place_marker,ev_draw,0)
            
        }
        //If a modifier is selected...
        else if selection = 5
        {
        
            //Draw the modifier preview (it's totally a hack but whatever)
            event_perform_object(obj_editor_place_modifier,ev_draw,0)
        
        }
        
        //Make the highlight green
        draw_set_color(c_green)
    }
        
    //Make the rectangle transparent
    draw_set_alpha(0.5)
    
    //Draw selected block highlight
    draw_rectangle(x,y,15+(floor(x/16)*16),15+(floor(y/16)*16),false)
    
    //Reset transparency
    draw_set_alpha(1)
    
    //Reset color
    draw_set_color(c_white)
    
    //Move cursor back to its exact position
    x = prev_x
    y = prev_y
    
}

//Draw grid if enabled
if grid
    draw_background(bg_grid,floor(view_xview[0]/16)*16,floor(view_yview[0]/16)*16)

//Draw the area outside the room blue
draw_set_color(make_color_rgb(64,144,240))
if view_xview[0] &lt; 0
    draw_rectangle(view_xview[0],view_yview[0],-1,view_yview[0]+view_hview[0],false)
if view_yview[0] &lt; 0
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],-1,false)
if view_xview[0] + view_wview[0] &gt; room_width
    draw_rectangle(room_width,view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false)
if view_yview[0] + view_hview[0] &gt; room_height
    draw_rectangle(view_xview[0],room_height,view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false)

//Reset draw color
draw_set_color(c_white)    

//White border around the room
draw_rectangle(0,0,room_width,room_height,true)

//Make cursor blue if there is something selected
image_index = min(1,selection)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
