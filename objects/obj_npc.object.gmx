<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc_luigi</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A character that can be talked to!

/*
**  This item uses creation code!
**
**  mugshot = The face sprite the NPC uses.
**  varmsg[0] = First message (in quotes)
**  varnpc[0] = 0 for NPC, 1 for Mario.
**  varmsg[1] = Second message (in quotes)
**  varnpc[1] = 0 for NPC, 1 for Mario.
**  etc..
*/

//Default Value:
mugshot = spr_mugshot_mario
varmsg[0] = "No message has been set. Please give me a message modifier!"
varnpc[0] = 0

//Can Mario see the NPC? (determines if the NPC has an exclaimation mark over their head)
seenpc = 0

//Scan for message modifiers
var done = 0,
    scan,
    index = 0,
    xindex = 0,
    yindex = 0;
while(done &lt; 3)
{
    scan = instance_place(x+(16*xindex)-8,y+(16*yindex),obj_cc_modifier)
    if scan
    and scan.mytype = 3
    {
        done = 0
        varmsg[index] = string(scan.content)
        varnpc[index] = floor((scan.y - y)/16)
        index++
    }
    else
        done++
    yindex++
    if yindex &gt; 1
    {
        yindex = 0
        xindex++
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start the dialogue!

//Make Mario say "Hello!"
audio_play_sound(snd_hello,0,0)

//Play the message box sound effect
audio_play_sound(snd_message,0,0)

//Create the message box
with instance_create(0,0,obj_dialoguebox)
{
    varmsg = other.varmsg
    varnpc = other.varnpc
    mugshot = other.mugshot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NPC logic

//If Mario doesn't exist, do not run the code below
if not instance_exists(obj_mario)
    exit
    
//Turn towards Mario
image_xscale = -1
if obj_mario.x &lt; x
    image_xscale = 1

//Check if Mario can see the NPC
seenpc = 0
if distance_to_object(obj_mario) &lt; 32
and obj_mario.direct = image_xscale
and ((obj_mario.x &gt; x+8
and image_xscale = -1)
or (obj_mario.x &lt; x-8
and image_xscale = 1))
    seenpc = 1
    
//Talk to the NPC when CTRL is pressed..
if keyboard_check_pressed(vk_control)

//..and he's within range..
and seenpc

//..and he's standing normally
and obj_mario.speed = 0
and obj_mario.state = 0
and obj_mario.isduck = 0
{
    
    //Set alarm to open the dialogue box
    alarm[0] = 1
    
    //Reset the state of the control key
    keyboard_clear(vk_control)
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the NPC

//Draw the NPC character
if sprite_exists(sprite_index)
    draw_self()

//If Mario sees the NPC
if seenpc
    
    //Draw the exclaimation mark above the NPC's head
    draw_sprite(spr_spritefont,0,x-4,y-12)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
