<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Displays a message inside a box!

/*
**  This item uses creation code!
**
**  varmsg[0] = First message (in quotes)
**  varnpc[0] = 0 for NPC, 1 for Mario.
**  varmsg[1] = Second message (in quotes)
**  varnpc[1] = 0 for NPC, 1 for Mario.
**  etc..
*/

//Default Value:
varmsg[0] = "No message has been set. Please give me a message modifier!"
varnpc[0] = 0

//NPC face sprite
mugshot = spr_mugshot_mario

//Can the text be seen?
showing = 0

//Currently displayed message
message_index = 0

//NPC mugshot animation
anim = 0

//Create a screenshot
back = background_create_from_surface(application_surface,0,0,view_wview[0],view_hview[0],0,0)

//Deactivate everything except the persistent object
instance_deactivate_all(1)
instance_activate_object(obj_persistent)

//Set the alarm to format the text
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate the NPC's face!
anim++

//If the text isn't done typing..
if a &lt;= string_length(text)
{
    
    //Set alarm to animate again.
    alarm[2] = 7
    
}

//Otherwise..
else
{
    
    //Close the NPC's mouth
    anim = 0
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes sounds play as the message is being displayed

//If the message is being displayed
if showing = 1
{

    //If all of the characters have not been displayed yet
    if a &lt;= string_length(text)
    {

        //Play the sound
        audio_stop_sound(snd_kick3)
        audio_play_sound(snd_kick3,0,0)

        //Play the sound again later
        alarm[1] = 7

    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare the message to be displayed

//Make sure that the font is correct before formatting
draw_set_font(global.messagefont)

//Format the text to the correct width
text = string_make_width(varmsg[message_index],280)

//Split up the message if it is too long
event_user(0)

//The text should start displaying now
showing = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Split up the message if it is too long

//Make sure that the font is correct before formatting
draw_set_font(global.messagefont)

//Iterate over all the characters in the message
for(var i = 1; i &lt;= string_length(text); i++)
{

    //If the text is too tall
    if string_height(string_copy(text,1,min(i+1,string_length(text)))) &gt; 86
    {

        //Split off the lines after the new line to be displayed later
        text = string_copy(text,1,i)

        //Break out of the loop
        break

    }

}

//Set the number of characters being displayed
a = 0

//Set the alarm for playing the sound effects
alarm[1] = 1

//Set the alarm to animate the NPC's face
alarm[2] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display the message box

//Draw the screenshot if it exists
if background_exists(back)
{
    draw_enable_alphablend(0)
    draw_background(back,view_xview[0],view_yview[0])
    draw_enable_alphablend(1)
}

//Draw the message box
draw_sprite_ext(spr_dialoguebox,0,view_xview[0]+23,view_yview[0]+23,1,1,0,c_white,0.7)

//If the text should be displayed
if showing = 1
{

    //Increment the number of letters that should be displayed
    if a &lt;= string_length(text)
        a++

    //Set the font
    draw_set_font(global.messagefont)

    //Draw the text up to the number of letters that should be displayed
    draw_text(view_xview[0]+72,view_yview[0]+31,string_copy(text,1,a))
    
    //Draw the NPC face sprite
    if varnpc[message_index] = 1
        draw_sprite(spr_mugshot_mario,anim,view_xview[0]+29,view_yview[0]+29)
    else
        draw_sprite(mugshot,anim,view_xview[0]+29,view_yview[0]+29)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advance the text

//If text is being displayed
if showing = 1
{

    //If the full message is not displayed yet, display it all
    if a &lt;= string_length(text)
        a = string_length(text)+1

    //Otherwise
    else
    {

        //If there is more to be displayed
        if message_index &lt; array_length_1d(varmsg)-1
        {

            //Make the new text the current text
            message_index++
            draw_set_font(global.messagefont)
            text = string_make_width(varmsg[message_index],280)
            draw_set_font(global.font)
            
            //Reset NPC face animation
            anim = 1
            
            //Play the message box sound effect
            audio_play_sound(snd_message,0,0)

            //Split up the message if it is too long
            event_user(0)

        }

        //Otherwise
        else
        {

            //Activate everything
            instance_activate_all()

            //Delete the screenshot
            if background_exists(back)
                background_delete(back)

            //Reset the state of the shift key
            keyboard_clear(vk_shift)

            //Destroy the message box
            instance_destroy()

        }

    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
