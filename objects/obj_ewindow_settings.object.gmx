<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_ewindow</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Editor settings menu

//Inherit default create event
event_inherited()

//Currently displayed name
myname = "SETTINGS"

//Amount of rows
myrows = 5

//Amount of categories
mycategories = 0

//Settings text
options[0] = "Keep Powerups when Damaged"
options[1] = "Daredevil Mode"
options[2] = "Rain Storm"
options[3] = "Snow"
options[4] = "Classic Scrolling"

//Settings icons
myicons[0] = spr_mushroom
myicons[1] = spr_skullraft
myicons[2] = spr_icon_storm
myicons[3] = spr_icon_snow
myicons[4] = spr_icon_road

//On/Off button for Keep Powerups when Damaged
keep_powerup = instance_create(x+319,y+27,obj_ewindow_button)
with keep_powerup
{
    if json_get(global.leveldata,global.currentsection,"KEEP_POWERUP")
        mytext = "on"
    else
        mytext = "off"
    sprite_index = spr_button_medium
    mywindow = other
    myevent = 1
}

//On/Off button for Daredevil Mode
daredevil = instance_create(x+319,y+51,obj_ewindow_button)
with daredevil
{
    if json_get(global.leveldata,global.currentsection,"DAREDEVIL")
        mytext = "on"
    else
        mytext = "off"
    sprite_index = spr_button_medium
    mywindow = other
    myevent = 2
}

//On/Off button for Rain Storm
rain = instance_create(x+319,y+75,obj_ewindow_button)
with rain
{
    if json_get(global.leveldata,global.currentsection,"RAIN")
        mytext = "on"
    else
        mytext = "off"
    sprite_index = spr_button_medium
    mywindow = other
    myevent = 3
}

//On/Off button for Snow
snow = instance_create(x+319,y+99,obj_ewindow_button)
with snow
{
    if json_get(global.leveldata,global.currentsection,"SNOW")
        mytext = "on"
    else
        mytext = "off"
    sprite_index = spr_button_medium
    mywindow = other
    myevent = 4
}

//On/Off button for Classic Scroll
classic_scroll = instance_create(x+319,y+123,obj_ewindow_button)
with classic_scroll
{
    if json_get(global.leveldata,global.currentsection,"CLASSIC_SCROLL")
        mytext = "on"
    else
        mytext = "off"
    sprite_index = spr_button_medium
    mywindow = other
    myevent = 5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Classic Scroll
json_set(global.leveldata,global.currentsection,"CLASSIC_SCROLL",!json_get(global.leveldata,global.currentsection,"CLASSIC_SCROLL"))

//Update the text
if json_get(global.leveldata,global.currentsection,"CLASSIC_SCROLL")
    classic_scroll.mytext = "on"
else
    classic_scroll.mytext = "off"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle snow
json_set(global.leveldata,global.currentsection,"SNOW",!json_get(global.leveldata,global.currentsection,"SNOW"))

//Update the text
if json_get(global.leveldata,global.currentsection,"SNOW")
    snow.mytext = "on"
else
    snow.mytext = "off"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle rain storm
json_set(global.leveldata,global.currentsection,"RAIN",!json_get(global.leveldata,global.currentsection,"RAIN"))

//Update the text
if json_get(global.leveldata,global.currentsection,"RAIN")
    rain.mytext = "on"
else
    rain.mytext = "off"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle daredevil mode
json_set(global.leveldata,global.currentsection,"DAREDEVIL",!json_get(global.leveldata,global.currentsection,"DAREDEVIL"))

//Update the text
if json_get(global.leveldata,global.currentsection,"DAREDEVIL")
    daredevil.mytext = "on"
else
    daredevil.mytext = "off"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle keep powerups on damage
json_set(global.leveldata,global.currentsection,"KEEP_POWERUP",!json_get(global.leveldata,global.currentsection,"KEEP_POWERUP"))

//Update the text
if json_get(global.leveldata,global.currentsection,"KEEP_POWERUP")
    keep_powerup.mytext = "on"
else
    keep_powerup.mytext = "off"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the settings menu
event_inherited()
for(var i = 0; i &lt; array_length_1d(options); i++)
{
    draw_sprite_ext(spr_button_small,0,x+3,y+27+(24*i),1,1,0,c_white,0.7)
    draw_sprite_ext(spr_setting_bar,0,x+27,y+27+(24*i),1,1,0,c_white,0.7)
    draw_sprite(myicons[i],0,x+6,y+30+(24*i))
    draw_text(x+34,y+34+(24*i),string_lower(options[i]))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
