<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_ewindow</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modifier Menu

//Inherit default create event
event_inherited()

//Currently displayed name
myname = "MODIFIER"

//Amount of categories
mycategories = 3

//Amount of rows
myrows = 3

//Used to calculate button coordinates
xcoord = 0
ycoord = 0

//Text modifier contents
mytext = ""

//Message modifier contents
mymessage = ""

//Text that displays in text box if nothing is typed
search[0] = "type a modifier name"
search[1] = "type something first"

//Allowed characters for text modifiers
allowed_text = " ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@$%^&amp;()[]-_=+'.,;`~" + '"'

//Allowed characters for message modifiers
allowed_message = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?!@$%^&amp;*()[]/\|-_+=,.:;`~'" + '"'

//Keyboard inputs to be processed
current_key = ""

//Currently displayed error
error = 0

//Key reader
keyreader = instance_create(0,0,obj_keyreader)

//Item tab
with instance_create(x+267,y+3,obj_ewindow_button)
{
    persists = true
    myicon = spr_mushroom
    hovertext = "ITEM"
    mywindow = other
    myevent = 1
}

//Arrow tab
with instance_create(x+291,y+3,obj_ewindow_button)
{
    persists = true
    myicon = spr_up
    hovertext = "ARROW"
    mywindow = other
    myevent = 2
}

//Text tab
with instance_create(x+315,y+3,obj_ewindow_button)
{
    persists = true
    myicon = spr_icon_text
    hovertext = "TEXT"
    mywindow = other
    myevent = 3
}

//Go to item modifier submenu
event_user(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up key reader object
with keyreader instance_destroy()

//Inherit button destruction
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop showing error
error = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Category swap script

//Inherit default event
event_inherited()

//Clear the text modifier text
mytext = ""
mymessage = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a modifier

//Change the editor's selection
with obj_editor
{
    //For item modifiers...
    if other.menu = 1
    {
        //Put cursor on modifier layer
        selection = 5
        
        //Select the item clicked on
        myname = text
        event_perform_object(obj_editor_place_modifier,ev_other,ev_user0)
    }
    //For arrow modifiers...
    if other.menu = 2
    {
        //Put cursor on marker layer
        selection = 4
        
        //Select the item clicked on
        myname = text
        event_perform_object(obj_editor_place_marker,ev_other,ev_user0)
    }
    //For text modifiers...
    if other.menu = 3
    {
        //Select the message text if it exists
        if text = "MESSAGE MODIFIER"
        and string_length(other.mymessage) &gt; 0
        {
            //Put cursor on modifier layer
            selection = 5
            
            //Select the item clicked on
            myname = "MESSAGE"
            content = other.mymessage
            event_perform_object(obj_editor_place_modifier,ev_other,ev_user0)
            
            //Play selection sound
            audio_play_sound(snd_correct,0,0)
        }
        //Select the normal text if it exists
        else if string_length(other.mytext) &gt; 0
        {
            //Put cursor on modifier layer
            selection = 5
            
            //Select the item clicked on
            myname = "TEXT"
            if text = "DESTINATION MARKER"
                myname = "DESTINATION"
            content = other.mytext
            event_perform_object(obj_editor_place_modifier,ev_other,ev_user0)
            
            //Play selection sound
            audio_play_sound(snd_correct,0,0)
        }
        //Otherwise, show the error
        else
        {
            //Clear the text so error can be displayed
            other.mytext = ""
            
            //Show text saying to type a modifier name first
            other.alarm[0] = 30
            other.error = 1
            
            //Play error sound
            audio_play_sound(snd_wrong,0,0)
        }
    }
}

//If the editor selected something, close the window
if obj_editor.selection &gt; 0
{
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard type event

//Only process key inputs if in the text modifier submenu
if menu != 3
{
    current_key = ""
    mytext = ""
    mymessage = ""
    exit
}

//Backspace
if current_key = "BACKSPACE"
{
    //Only backspace if there's still letters to delete
    if string_length(mytext) &gt; 0
    {
        //Remove one character from the search string
        mytext = string_delete(mytext,string_length(mytext),1)
    }
    if string_length(mymessage) &gt; 0
    {
        //Play kick sound
        audio_play_sound(snd_kick2,0,0)
        
        //Remove one character from the search string
        mymessage = string_delete(mymessage,string_length(mymessage),1)
    }
    
}
//New characters typed
else
{

    //Set the font
    draw_set_font(global.messagefont)
    
    //Remapped keys
    current_key = string_replace(current_key,"{","(")
    current_key = string_replace(current_key,"}",")")
    current_key = string_replace(current_key,"&lt;","[")
    current_key = string_replace(current_key,"&gt;","]")
    
    //Message modifier box typing
    var mymessage_old = mymessage;
    for(var i = 0; i &lt; string_length(current_key); i++)
    {
        //Check if the current character is allowed..
        if string_count(string_char_at(current_key,i),allowed_message) &gt; 0
        
        //..and make sure the search string isn't too long
        and string_height(string_make_width(mymessage+string_char_at(current_key,i),280)) &lt;= 80
        and string_width(string_make_width(mymessage+string_char_at(current_key,i),280)) &lt;= 280
        {
            
            //If so, add it to the search string
            mymessage += string_char_at(current_key,i)
            
            //Play kick sound
            audio_play_sound(snd_kick,0,0)
        }
    }
    
    //Make input upper-case for normal text modifiers
    current_key = string_upper(current_key)
    
    //Text modifier box typing
    for(var i = 0; i &lt; string_length(current_key); i++)
    {
        //Check if the current character is allowed..
        if string_count(string_char_at(current_key,i),allowed_text) &gt; 0
        
        //..and make sure the search string isn't too long
        and string_length(mytext) &lt; 25
        {
            
            //If so, add it to the search string
            mytext += string_char_at(current_key,i)
            
            //Play kick sound
            if not (string_count(string_char_at(current_key,i),allowed_message) &gt; 0
            and mymessage_old != mymessage)
                audio_play_sound(snd_kick,0,0)
        }
    }
}

//Reset the font
draw_set_font(global.font)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open text submenu
menu = 3

//Set window name
myname = "MODIFIER - TEXT"

//Amount of rows
myrows = 5

//Text modifier button
with instance_create(xstart + 193, ystart + 27, obj_ewindow_button)
{
    hovertext = "TEXT MODIFIER"
    myicon = spr_icon_text
    mywindow = other
    myevent = 14
    mysound = noone
}

//Destination marker button
with instance_create(xstart + 217, ystart + 27, obj_ewindow_button)
{
    hovertext = "DESTINATION MARKER"
    myicon = spr_icon_text_dest
    mywindow = other
    myevent = 14
    mysound = noone
}

//Message modifier button
with instance_create(xstart + 297, ystart + 51, obj_ewindow_button)
{
    hovertext = "MESSAGE MODIFIER"
    myicon = spr_icon_text
    mywindow = other
    myevent = 14
    mysound = noone
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open the arrow modifier submenu
menu = 2

//Set window name
myname = "MODIFIER - ARROW"

//Amount of rows
myrows = 1

//Used to calculate where each button in the grid should be
xcoord = 0
ycoord = 0

//Arrow modifier buttons
scr_submenu_add_button("UP",spr_up)
scr_submenu_add_button("DOWN",spr_down)
scr_submenu_add_button("LEFT",spr_left)
scr_submenu_add_button("RIGHT",spr_right)
scr_submenu_add_button("END",spr_endmarker)
scr_submenu_add_button("SPEED",spr_speedmarker)
scr_submenu_add_button("CLOCKWISE",spr_clockwise)
scr_submenu_add_button("COUNTERCLOCKWISE",spr_cclockwise)
scr_submenu_add_button("CLOCKWISE BOTTOM",spr_clockwiseb)
scr_submenu_add_button("COUNTERCLOCKWISE BOTTOM",spr_cclockwiseb)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open the item modifier submenu
menu = 1

//Set window name
myname = "MODIFIER - ITEM"

//Amount of rows
myrows = 1

//Used to calculate where each button in the grid should be
xcoord = 0
ycoord = 0

//Item modifier buttons
scr_submenu_add_button("MUSHROOM",spr_mushroom)
scr_submenu_add_button("FIRE FLOWER",spr_fireflower)
scr_submenu_add_button("HAMMER SUIT",spr_hammersuit)
scr_submenu_add_button("LEAF",spr_leaf)
scr_submenu_add_button("TANOOKI SUIT",spr_tanookisuit)
scr_submenu_add_button("FROG SUIT",spr_frogsuit)
scr_submenu_add_button("BOMB SHROOM",spr_icon_bombshroom)
scr_submenu_add_button("ICE FLOWER",spr_iceflower)
scr_submenu_add_button("SUPER FLOWER",spr_superflower)
scr_submenu_add_button("CARROT",spr_carrot)
scr_submenu_add_button("NINJA SUIT",spr_ninjasuit)
scr_submenu_add_button("BEE SHROOM",spr_beeshroom)
scr_submenu_add_button("SHELL SUIT",spr_blueshell)
scr_submenu_add_button("PENGUIN SUIT",spr_penguinsuit)
scr_submenu_add_button("PROPELLER SHROOM",spr_icon_propellershroom)
scr_submenu_add_button("BOOMERANG FLOWER",spr_boomerangflower)
scr_submenu_add_button("WALL JUMP SHROOM",spr_walljumpshroom)
scr_submenu_add_button("ACORN",spr_icon_acorn)
scr_submenu_add_button("CLOUD FLOWER",spr_cloudflower)
scr_submenu_add_button("ROCK SHROOM",spr_rockshroom)
scr_submenu_add_button("PYRE FLOWER",spr_pyreflower)
scr_submenu_add_button("SWOOPER SUIT",spr_swoopersuit)
scr_submenu_add_button("KARATE SUIT",spr_karatesuit)
scr_submenu_add_button("SUPER CROWN",spr_supercrown)
scr_submenu_add_button("GREEN YOSHI",spr_hatch)
scr_submenu_add_button("RED YOSHI",spr_hatch_r)
scr_submenu_add_button("YELLOW YOSHI",spr_hatch_y)
scr_submenu_add_button("BLUE YOSHI",spr_hatch_b)
scr_submenu_add_button("KURIBO SHOE",spr_kuriboshoe)
scr_submenu_add_button("BABURU SHOE",spr_baburushoe)
scr_submenu_add_button("DOSSUN SHOE",spr_dossunshoe)
scr_submenu_add_button("JUGEMU SHOE",spr_icon_jugemushoe)
scr_submenu_add_button("1UP",spr_1up)
scr_submenu_add_button("3UP",spr_3upmoon)
scr_submenu_add_button("POISON SHROOM",spr_poison)
scr_submenu_add_button("STAR",spr_star)
scr_submenu_add_button("KEY",spr_key)
scr_submenu_add_button("SPRING",spr_spring)
scr_submenu_add_button("SUPER SPRING",spr_spring_super)
scr_submenu_add_button("P-SWITCH",spr_pswitch)
scr_submenu_add_button("E-SWITCH",spr_eswitch)
scr_submenu_add_button("PROPELLER BLOCK",spr_propellerblock)
scr_submenu_add_button("BEANSTALK",spr_beanstalk)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text modifier submenu

//Inherit default editor window draw event
event_inherited()

//If in the text modifier submenu..
if menu = 3
{
    //Draw the text box
    draw_sprite_ext(spr_typer,obj_editor.anim[1],x+3,y+27,1,1,0,c_white,0.7)
    
    //Draw text if it exists
    if string_length(mytext) &gt; 0
        draw_text(x+10,y+34,mytext)
    else
        draw_text(x+10,y+34,search[error])
    
    //Draw the message box
    draw_sprite_ext(spr_typer_message,0,x+3,y+51,1,1,0,c_white,0.7)
    
    //Set font to message font
    draw_set_font(global.messagefont)
    
    //Draw message text
    draw_text(x+9,y+57,string_make_width(mymessage,280))
    
    //Reset font
    draw_set_font(global.font)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
